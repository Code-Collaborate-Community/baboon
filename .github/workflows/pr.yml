name: CI - Build and test

on:
  pull_request:
    branches: [ master ]

jobs:
  build:
    env:
      context: beyond
      image_name: beyond
    runs-on: ubuntu-18.04
    steps:
    - name: Checkout source tree
      uses: actions/checkout@v2
    - name: Set up Python 3.7
      uses: actions/setup-python@v1
      with:
        python-version: 3.7
        
    - name: Lint with flake8
      run: |
        pip install flake8
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --max-complexity=10 --max-line-length=127 --statistics

    - name: Install basic packages that are required for tests
      run: |
        sudo apt-get update -y
        sudo apt-get install -y python3-pip python3-setuptools libsystemd-dev

    - name: Install Dependencies
      run: |
        wget https://github.com/mozilla/geckodriver/releases/download/v0.26.0/geckodriver-v0.26.0-linux64.tar.gz
        mkdir geckodriver
        tar -xzf geckodriver-v0.26.0-linux64.tar.gz -C geckodriver
        pip install -r tests/requirements-test.txt

#    - name: Build the docker-compose stack
#      run: docker-compose up -d

    - name: Check and verify version.json
      id: check_version
      run: |
        echo -n ::set-output name=IMAGE_TAGS::
        echo $(jq -r '.version' version.json)

    - name: Build Beyond image
      uses: docker/build-push-action@v1
      with:
        path: .
        push: false
        repository: ${{ env.image_name }}
        tags: ${{ steps.check_version.outputs.IMAGE_TAGS }}

    - name: Run Beyond image
      run: |
        echo "Running: docker run -d -p 5000:5000 --name ${image_name} ${image_name}:${{ steps.check_version.outputs.IMAGE_TAGS }}"
        docker run -d -p 5000:5000 --name ${image_name} ${image_name}:${{ steps.check_version.outputs.IMAGE_TAGS }}

    - name: Execute tests
      run: |
        pytest
